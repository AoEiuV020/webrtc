
name: AppRTCMobile
env:
    TZ: Asia/Shanghai

on:
  push:
    paths-ignore:
      - '.github/workflows/*'
      - '!.github/workflows/AppRTCMobile.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 512
        swap-size-mb: 1024
        remove-dotnet: 'true'
    - name: init custom env
      run: |
        BUILD_NAME="AppRTCMobile"
        BUILD_VERSION="$(date +'%Y%m%d%H%M%S')"
        BUILD_NAME_WITH_VERSION="$BUILD_NAME-$BUILD_VERSION"
        echo BUILD_NAME="$BUILD_NAME" >> .custom_env
        echo BUILD_VERSION="$BUILD_VERSION" >> .custom_env
        echo BUILD_NAME_WITH_VERSION="$BUILD_NAME_WITH_VERSION" >> .custom_env
        cat .custom_env
        cat .custom_env >> $GITHUB_ENV
        git config --global user.name "$GITHUB_ACTOR"
        git config --global user.email "ignore@examble.com"
    - name: build
      run: |
        git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export DEPOT_TOOLS_DIR=$PWD/depot_tools
        PATH=$DEPOT_TOOLS_DIR:$DEPOT_TOOLS_DIR/python276_bin:$PATH

        git clone --depth=1 "https://github.com/$GITHUB_REPOSITORY.git" src
        gclient config --name=src --unmanaged "https://github.com/$GITHUB_REPOSITORY.git"
        echo 'target_os = ["android", "unix"]' >> .gclient
        gclient sync
        cd src
        gn gen out/build --args='target_os="android" target_cpu="arm" is_debug=false'
        sudo ln -sf /usr/bin/python2 /usr/bin/python
        ninja -C out/build AppRTCMobile
        mv out/build/apks/AppRTCMobile.apk ../${{ env.BUILD_NAME_WITH_VERSION }}-android.apk
    - name: Upload APK
      uses: actions/upload-artifact@master
      with:
        name: android-build
        path: ${{ env.BUILD_NAME_WITH_VERSION }}-android.apk
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.BUILD_VERSION }}
        release_name: ${{ env.BUILD_VERSION }}
        body: ${{ github.event.commits[0].message }}
        draft: true
        prerelease: false
    - name: Upload Release Asset android
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BUILD_NAME_WITH_VERSION }}-android.apk
        asset_name: ${{ env.BUILD_NAME_WITH_VERSION }}-android.apk
        asset_content_type: application/zip
    - name: public release
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
